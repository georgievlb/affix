---
AWSTemplateFormatVersion: 2010-09-09
Description: ECS Cluster Template
Parameters:
  VpcStackName:
    Type: String
    Default: affix-vpc
  SecurityGroupStackName:
    Type: String
    Default: affix-security-groups

Resources:  
  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Type: application
      Subnets:
        - Fn::ImportValue: !Sub ${VpcStackName}-PublicSubnetAZ1
        - Fn::ImportValue: !Sub ${VpcStackName}-PublicSubnetAZ2
      SecurityGroups:
        - Fn::ImportValue: !Sub ${SecurityGroupStackName}-LoadBalancerSecurityGroup
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '60'
#        - Key: access_logs.s3.enabled
#          Value: true
#        - Key: access_logs.s3.bucket
#          Value: affix-load-balancer-logs
      IpAddressType: ipv4
  
  # TODO Enable ALBListener HTTPS forwarding once you have a valid certificate
  # TODO: Add a fixed-response ALBListenerRule. See https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#fixed-response-actions
  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ALB
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ALBDefaultTargetGroup
      Port: 80
      Protocol: HTTP

  ALBDefaultTargetGroup:
    Description: Defines a mandatory default target group. This is not used, instead a target group is created per-service in each ECS service template. 
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId:
        Fn::ImportValue: !Sub ${VpcStackName}-VPC
      Port: 80
      Protocol: HTTP

Outputs:
  ALB:
    Description: The application load balancer
    Value: !Ref ALB
    Export:
      Name: !Sub ${AWS::StackName}-ALB
  ALBListenerARN:
    Value: !Ref ALBListener
    Export:
      Name: !Sub ${AWS::StackName}-ALBListenerARN