---
AWSTemplateFormatVersion: 2010-09-09
Description: ECS Cluster Template
Parameters:
  VpcStackName:
    Type: String
    Default: affix-vpc
  SecurityGroupStackName:
    Type: String
    Default: affix-security-groups

Resources:  
  ALB:
    DependsOn: ALBLogsBucket
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Type: application
      Subnets:
        - Fn::ImportValue: !Sub ${VpcStackName}-PublicSubnetAZ1
        - Fn::ImportValue: !Sub ${VpcStackName}-PublicSubnetAZ2
      SecurityGroups:
        - Fn::ImportValue: !Sub ${SecurityGroupStackName}-LoadBalancerSecurityGroup
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '60'
        - Key: access_logs.s3.enabled
          Value: true
        - Key: access_logs.s3.bucket
          Value: !Ref ALBLogsBucket
      IpAddressType: ipv4
  
  # TODO Enable ALBListener HTTPS forwarding once you have a valid certificate
  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ALB
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ALBDefaultTargetGroup
      Port: 80
      Protocol: HTTP
      #SslPolicy: ELBSecurityPolicy-2016-08 # Default security policy.
      # More info here: https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies
  #      Certificates:
  #        - CertificateArn: !Ref ECSClusterCertificate
#  ALBListenerRule:
#    Type: AWS::ElasticLoadBalancingV2::ListenerRule
#    Properties:
#      Actions:
#        - Type: fixed-response
#          FixedResponseConfig:
#            ContentType: text/html
#            MessageBody: |
#              <!DOCTYPE html>
#              <html>
#                <head>
#                  <title>Page unrecognized</title>
#                </head>
#                <body>
#                    <div>404</div>
#                </body>
#              </html>
#            StatusCode: 404
#      Conditions:
#        - Field: path-pattern
#          PathPatternConfig:
#            Values:
#              - "*"
#      ListenerArn: !Ref ALBListener
#      Priority: 50000
  
  # We define a default target group here, as this is a mandatory Parameter
  # when creating an Application Load Balancer Listener. This is not used, instead
  # a target group is created per-service in each service template.
  ALBDefaultTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId:
        Fn::ImportValue: !Sub ${VpcStackName}-VPC
      Port: 80
      Protocol: HTTP


  # Create an S3 logs bucket
  ALBLogsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: affix-load-balancer-logs
      AccessControl: LogDeliveryWrite
      LifecycleConfiguration:
        Rules:
          - Id: ExpireLogs
            ExpirationInDays: 365
            Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    DeletionPolicy: Retain

  ALBLoggingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ALBLogsBucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: elasticloadbalancing.amazonaws.com
            Action: s3:PutObject
            Resource: !Ref ALBLogsBucket

  ALBIAMRole:
    DependsOn: ALBLogsBucket
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - elasticloadbalancing.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: AllowElasticLoadBalancerWriteAccess
                Effect: Allow
                Action: s3:PutObject
                Resource: !Ref ALBLogsBucket

Outputs:
  ALB:
    Description: The application load balancer
    Value: !Ref ALB
    Export:
      Name: !Sub ${AWS::StackName}-ALB
  ALBListenerARN:
    Value: !Ref ALBListener
    Export:
      Name: !Sub ${AWS::StackName}-ALBListenerARN