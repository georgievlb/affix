# Use the latest version of the .NET core runtime image as the base image
FROM mcr.microsoft.com/dotnet/aspnet:6.0 AS base

# Create the working directory
WORKDIR /app

# Use the latest version of the Node.js LTS image as the base image for the client
FROM node:14-alpine3.15 AS client

# Create the working directory
WORKDIR /app

# Copy the client files and install the dependencies
COPY ./Affix.Client/Client .
WORKDIR /app/Affix.Client/Client
RUN npm install

# Use the client image as the build image for the client
FROM client AS build

# Build the client
WORKDIR /app
RUN npm run build:dev

# Use the latest version of the .NET core SDK image as the build image for the server
FROM mcr.microsoft.com/dotnet/sdk:6.0 AS server

# Create the working directory
WORKDIR /src

# Copy the server project file and restore the dependencies
COPY ["Affix.Client/Affix.Client.csproj", "Affix.Client/"]
RUN dotnet restore "Affix.Client/Affix.Client.csproj"

# Copy the rest of the server source code and change the working directory
COPY . .
WORKDIR "/src/Affix.Client"

# Build the server in release mode and output the result to the /app/build directory
RUN dotnet build "Affix.Client.csproj" -c Debug -o /app/build

# Use the server image as the publish image
FROM server AS publish

# Publish the server in release mode and output the result to the /app/publish directory
RUN dotnet publish "Affix.Client.csproj" -c Debug -o /app/publish

# Use the base image as the final image
FROM base AS final

# Create the working directory
WORKDIR /app

# Copy the published files from the publish image
COPY --from=publish /app/publish .

# Copy the built client files from the build image
COPY --from=build /app/dist ./wwwroot

# Set the entrypoint for the final image
ENTRYPOINT ["dotnet", "Affix.Client.dll"]
